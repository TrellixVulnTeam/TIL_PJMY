# 02/09 List I

| No.  | Title             | Directory    | PPT 번호 |
| ---- | ----------------- | ------------ | :------: |
|      | 입력받기          | `연습문제_1` |          |
|      | 이차원배열 다루기 | `연습문제_2` |          |
|      | Gravity           | `연습문제_3` |          |
|      | Baby Gin          | `연습문제_4` |          |
|      | SWEA - 1206       | 1206_View    |          |



## input

### 연습문제 1 - 입력받기

```
33
1 2 3 4 5
3
1 2 3
4 5 6
7 8 9
```



### 연습문제 2 - 이차원배열

```
3 4
0 1 2 3
4 5 6 7
8 9 10 11
```





### 연습문제 3 - Gravity

![gravity1](C:/Users/star3/ssafy7/DONT_TOUCH_ME/handsout/hws/03_algorithm/0209/README.assets/gravity1.png)

![gravity2](C:/Users/star3/ssafy7/DONT_TOUCH_ME/handsout/hws/03_algorithm/0209/README.assets/gravity2.png)

```
3
9
7 4 2 0 0 6 0 7 0
9
7 4 2 0 0 6 7 7 0
20
52 56 38 77 43 31 11 87 68 64 88 76 56 59 46 57 75 85 65 53
```

```
#1 7
#2 6
#3 13
```

``` python

T = int(input())


for tc in range(1, T + 1):
    N = int(input())
    lst = list(map(int, input().split()))
    len_lst = len(lst)

    cnt_arr = []
    # 최대값 찾기 - 나보다 작으면 1더함!
    for i in range(len_lst):
        cnt = 0
        for j in range(i+1, len_lst):
            if lst[i] > lst[j]:
                cnt += 1
            else:
                continue
        cnt_arr.append(cnt)
    


    

    # x = lst[i] lst의 인덱스값 
    # A는 0, 8
    

    print(f'#{tc} {cnt_arr}')
```



### 연습문제 4 - Baby gin 

![baby-gin1](C:/Users/star3/ssafy7/DONT_TOUCH_ME/handsout/hws/03_algorithm/0209/README.assets/baby-gin1.png)

![baby-gin2](C:/Users/star3/ssafy7/DONT_TOUCH_ME/handsout/hws/03_algorithm/0209/README.assets/baby-gin2.png)

```
9
111456
123123
233677
112233
333333
123456
667767
054060
101123
```

```
#1 1
#2 1
#3 0
#4 1
#5 1
#6 1
#7 1
#8 1
#9 0
```







# 0210 List I


| No.  | Title               | Directory             | ??    |
| ---- | ------------------- | --------------------- | ----- |
|      | 4828_min_max        | `4828_min_max`        | learn |
|      | 4831_electric_bus   | `4831_electric_bus`   | learn |
|      | 4834_cards          | `4834_cards`          | learn |
|      | 4835_sumofintervals | `4835_sumofintervals` | learn |
|      | 1208_flatten        | `1208_flatten`        | HW    |





# 02/14 List II


| Title     | Directory    | 비고 |
| --------- | ------------ | ---- |
| 연습문제1 | `p1`         | ppt  |
| 연습문제2 | `p2`         | ppt  |
| 연습문제3 | `1954_snail` | swea |
| 1209_sum  | `1209_sum`   | HW   |

### 연습문제 1

### ![image-20220213154627682](C:/Users/star3/ssafy7/DONT_TOUCH_ME/handsout/hws/03_algorithm/0214/README.assets/image-20220213154627682.png)

```bash
3
5
45 15 10 56 23
96 98 99 40 69
96 84 49 46 34
16 64 81 4 11
10 66 85 55 14
5
44 91 64 73 62
78 72 52 73 48
44 88 55 75 24
22 72 59 26 62
87 11 64 79 40
5
10 10 10 10 10
10 10 10 10 10
10 10 10 10 10
10 10 10 10 10
10 10 10 10 10
```

```bash
#1 2430
#2 2244
#3 0
```



### 연습문제 2

![image-20210810203801273](C:/Users/star3/ssafy7/DONT_TOUCH_ME/handsout/hws/03_algorithm/0214/README.assets/image-20220213154728260.png)

```bash
3
19 6 16 19 15 16 8 13 16 10
-20 -6 -13 3 -19 -9 19 -3 9 4
7 7 19 1 -18 5 -9 -11 19 18
```

```bash
#1 0
#2 1
#3 1
```



### [연습문제 3.1954_snail](https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5PobmqAPoDFAUq&categoryId=AV5PobmqAPoDFAUq&categoryType=CODE&problemTitle=1954&orderBy=FIRST_REG_DATETIME&selectCodeLang=ALL&select-1=&pageSize=10&pageIndex=1)

[HomeWork.1209_sum](https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV13_BWKACUCFAYh&categoryId=AV13_BWKACUCFAYh&categoryType=CODE&problemTitle=1209&orderBy=FIRST_REG_DATETIME&selectCodeLang=ALL&select-1=&pageSize=10&pageIndex=1)







# 02/15 List II


| Title             | Directory           | 비고  |
| ----------------- | ------------------- | ----- |
| 4836_색칠하기     | `4836_색칠하기`     | learn |
| 4837_부분집합의합 | `4837_부분집합의합` | learn |
| 4839_이진탐색     | `4839_이진탐색`     | learn |
| 4843_특별한탐색   | `4843_특별한탐색`   | learn |
| 1210_ladder1      | `1210_ladder1`      | HW    |

## [Learn Course](https://swexpertacademy.com/main/learn/course/subjectDetail.do?courseId=AVuPDN86AAXw5UW6&subjectId=AWOVF-WqqecDFAWg)

## [HomeWork - 1210_ladder1](https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV14ABYKADACFAYh&categoryId=AV14ABYKADACFAYh&categoryType=CODE&problemTitle=ladder&orderBy=FIRST_REG_DATETIME&selectCodeLang=ALL&select-1=&pageSize=10&pageIndex=1)

### Extra

1. 2001_파리퇴치
2. 1979_어디에 단어가 들어갈 수 있을까
3. 1966 숫자를 정렬하자 (선택정렬 복습)







## 02/16 String

> 0216

|        No        |           Title            | HW 여부 | 비고 |
| :--------------: | :------------------------: | :-----: | :--: |
|    연습문제 1    | 문자열 뒤집기(문자열 비교) |    O    | ppt  |
|    연습문제 2    |    정수를 문자열로 반환    |    O    | ppt  |
| 연습문제3 (1213) |           String           |         |      |
|       1221       |            GNS             |    O    |      |
|       6485       |     삼성시의 버스노선      |         | 추가 |
|       1859       |     백만장자 프로젝트      |         | 추가 |
|       4408       |    자기 방으로 돌아가기    |         | 추가 |
|       5356       |   의석이의 세로로 말해요   |         | 추가 |
|       1947       |        스도쿠 검증         |         | 추가 |
|       1961       |       숫자 배열 회전       |         | 추가 |




### 연습문제1 - 문자열 뒤집기(문자열 비교)

> - 문자열을 뒤집는 다양한 방법 정리해보기

![Snipaste_2022-02-15_23-48-32](C:/Users/star3/ssafy7/DONT_TOUCH_ME/handsout/hws/03_algorithm/0216/0216.assets/Snipaste_2022-02-15_23-48-32.png)

input

```
4
algorithm
life is short
you need python
SSAFY
```

output

```
#1 mhtirogla
#2 trohs si efil
#3 nohtyp deen uoy
#4 YFASS
```



---



### 연습문제2 - 정수를 문자열로 반환

> - 아스키 코드가 아닌 **문자열 ‘0~9’ 까지의 index를 활용해서 푸는 방법을 권장**합니다.
>
> - 아스키 코드는 추후 제공되는 예시 답안을 확인해주시기 바랍니다.

![Snipaste_2022-02-15_23-50-50](C:/Users/star3/ssafy7/DONT_TOUCH_ME/handsout/hws/03_algorithm/0216/0216.assets/Snipaste_2022-02-15_23-50-50.png)

input

```
5
3
1461
4671224
85761
-1
```

output

```
#1 5 <class 'str'>
#2 3 <class 'str'>
#3 1461 <class 'str'>
#4 4671224 <class 'str'>
#5 85761 <class 'str'>
#6 -1 <class 'str'>
```



---



### 연습문제3 - 1213_String

> - **보이어 무어로 풀이 하는 것을 권장하지 않습니다.**
> - 보이어 무어는 추후 필요한 순간에 다시 등장할 예정입니다.
> - brute_force, KMP 혹은 다른 풀이법을 활용해서 푸는 방법을 권장합니다.
>
> [주의]
>
> - `sys.stdin = open('input.txt', encoding='utf-8')` 를 사용해 데이터를 입력 받습니다.







## 02/17 String

|  No  |          Title          | HW 여부 | 비고 |
| :--: | :---------------------: | :-----: | :--: |
| 4864 |       문자열비교        |    O    |      |
| 4861 |          회문           |    O    |      |
| 4865 |         글자수          |    O    |      |
| 3143 | 가장 빠른 문자열 타이핑 |    O    |      |
| 1216 |          회문2          |    O    |      |
| 5356 | 의석이의 세로로 말해요  |         | 추가 |
| 5432 |     쇠막대기 자르기     |         | 추가 |
| 1859 |    백만장자 프로젝트    |         | 추가 |



## 금요일 라이브 풀이 예정 목록

|  No  |             Title              |
| :--: | :----------------------------: |
| 1216 |             회문2              |
| 1945 |       간단한 소인수분해        |
| 5789 |       현주의 상자 바꾸기       |
| 6485 |       삼성시의 버스노선        |
| 2001 |            파리퇴치            |
| 1979 | 어디에 단어가 들어갈 수 있을까 |
| 1974 |          스도쿠 검증           |
| 5356 |     의석이의 세로로 말해요     |
| 5432 |        회막대기 자르기         |
| 1859 |       백만장자 프로젝트        |
| 4408 |      자기 방으로 돌아가기      |
| 1961 |         숫자 배열 회전         |

